//
// This file was generated by the JPA Modeler
//
package br.jus.trt23.contavinculada.entities;

import br.jus.trt23.contavinculada.constants.Constantes;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.br.CPF;

@Entity
@Table(schema = Constantes.SCHEMA)
public class PessoaFisica extends Pessoa {
    protected final static String[] uniqueIndex = {"cpf"};        

    @Getter
    @Setter
    @NotEmpty
    @CPF
    private String cpf;

    @Getter
    @Setter
    @NotEmpty
    private String nome;

    @Getter
    @Setter
    private LocalDate nascimentoData;

    @Getter
    @Setter
    private String rgNumero;

    @Getter
    @Setter
    private String rgOrgaoExpedidor;

    @Getter
    @Setter
    private String rgUF;

    @Getter
    @Setter
    private String pisPasep;

    @Getter
    @Setter
    private String ctps;

    @Getter
    @OneToMany(mappedBy = "colaborador")
    private List<Colaborador> colaboradorEm;

    public PessoaFisica() {
        this.colaboradorEm = new ArrayList<>();
    }

    public void addColaboradorEm(Colaborador colaborador) {
        colaboradorEm.add(colaborador);
        colaborador.setColaborador(this);
    }

    @Override
    public String getDescricao() {
        return getNome().concat(" (").concat(getCpf()).concat(")");
    }

    @Override
    public String getNomeNatural() {
        return "Pessoa f√≠sica";
    }

}
